#!/bin/bash

tools="plotCRTmod_batch.m epstopdf matlab mogrify";

echo "checking for tools"
forcecheck(){
	Ret_val=`which $1`
	if [ -z "$Ret_val" ];then
		echo "$1 not in search path.. searching $HOME..."
		Ret_val=`find $HOME -name "$1" -print`
		if [ -z "$arg" ];then
			exit
		fi
	fi
	return
}

i=1;
for x in $tools;do
	forcecheck $x
	case "$i" in
		1)
			plotmod=$Ret_val
		;;
		2)
			epsp=$Ret_val
		;;
		3)
			mtlb=$Ret_val
		;;
		4)
			mogri=$Ret_val
		;;
		*)
			echo "not possible"
			exit
		;;
	esac
	i=$[$i+1];
done

awk '{if (NR==2){print}}' crmod.cfg > tmp.meshname
awk '{if (NR==3){print}}' crmod.cfg > tmp.elecname
awk '{if (NR==4){print}}' crmod.cfg > inv.lastmod

if [ -e "tmp.crange" ];then
    c1=`awk '{print$1}' tmp.crange`
    c2=`awk '{print$2}' tmp.crange`
else
    c1=`pwd|awk '/2_decades/{printf("%.1f\t%.1f",1.0,3.0)}'` 
    c2=`pwd|awk '/3_decades/{printf("%.1f\t%.1f",0.5,3.5)}'` 
    c3=`pwd|awk '/4_decades/{printf("%.1f\t%.1f",0.0,4.0)}'` 
fi
echo range check: $c1 $c2 $c3 $2
echo $c1 $c2 $c3 $2 > tmp.crange

tmp=`cat inv.lastmod`

echo 'CRTomo resistivity model' > tmp.fenster
rm tmp.cbarn
awk '{if(NR>1){printf("%f\t%f\t%g\n",0,0,log($1)/log(10))}else{print}}' $tmp > cur_crmod.mag
echo 'cur_crmod.mag' > inv.lastmod

$mtlb < $plotmod >& /dev/null

#myeps='cur_crmod.mag.eps'
#mypdf='cur_crmod.pdf'

#echo image conversion... $myeps $mypdf
#$epsp $myeps -o=$1$mypdf >& /dev/null
#$mogri -format jpg $myeps

#cp tmp.crange tmp.crange.r
#c2=`awk '{printf("%f",-log(10^$1))}' tmp.crange.r`
#c1=`awk '{printf("%f",-log(10^$2))}' tmp.crange.r`
#echo 'CRTomo conductivity model' > tmp.fenster
#echo 'ln(\sigma) [S/m]' > tmp.cbarn
#echo $1 $2 > tmp.crange
#awk '{if(NR>1){printf("%f\t%f\t%g\n",0,0,-log($1))}else{print}}' $tmp > cur_crmod_s.mag
#echo 'cur_crmod_s.mag' > inv.lastmod

#$mtlb < $plotmod >& /dev/null

#myeps='cur_crmod_s.mag.eps'
#mypdf='cur_crmod_s.pdf'

#echo image conversion... $myeps $mypdf
#$epsp $myeps -o=$1$mypdf >& /dev/null
#$mogri -format jpg $myeps
#mv tmp.crange.r tmp.crange
#echo "done $1"

#pdfcr=`which pdfcrop`
#forcecheck $pdfcr
#$pdfcr --margins 1 --hires $mypdf cropped.pdf >& /dev/null
