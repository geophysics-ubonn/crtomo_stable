#!/bin/bash

tools="plotCRTmod_batch.m epstopdf matlab mogrify";

echo "checking for tools"
forcecheck(){
	Ret_val=`which $1`
	if [ -z "$Ret_val" ];then
		echo "$1 not in search path.. searching $HOME..."
		Ret_val=`find $HOME -name "$1" -print`
		if [ -z "$arg" ];then
			exit
		fi
	fi
	return
}

i=1;
for x in $tools;do
	forcecheck $x
	case "$i" in
		1)
			plotmod=$Ret_val
		;;
		2)
			epsp=$Ret_val
		;;
		3)
			mtlb=$Ret_val
		;;
		4)
			mogri=$Ret_val
		;;
		*)
			echo "not possible"
			exit
		;;
	esac
	i=$[$i+1];
done
cp inv.lastmod crt.lastmod
if [ -e 'crmod.cfg' ];then
    echo found crmod.cfg
else
    echo there is no crmod.cfg, exiting
    exit
fi

awk '{if (NR==2){print}}' crmod.cfg > tmp.meshname
awk '{if (NR==3){print}}' crmod.cfg > tmp.elecname

if [ -e "tmp.crange" ];then
    c1=`awk '{print$1}' tmp.crange`
    c2=`awk '{print$2}' tmp.crange`
else
    c1=`pwd|awk '/2_decades/{printf("%.1f\t%.1f",1.0,3.0)}'` 
    c2=`pwd|awk '/3_decades/{printf("%.1f\t%.1f",0.5,3.5)}'` 
    c3=`pwd|awk '/4_decades/{printf("%.1f\t%.1f",0.0,4.0)}'` 
fi

if [ -e 'tmp.cond' ];then
	echo trying to plot condition data
fi
echo range check: $c1 $c2 $c3 $2
echo $c1 $c2 $c3 $2 > tmp.crange

mod=`awk '{if (NR==4){print}}' crmod.cfg`

awk '{if(NR>1){printf("%f\t%f\t%g\n",0,0,log($1)/log(10))}else{print}}' $mod > cur_crmod.mag
echo 'cur_crmod.mag' > inv.lastmod
echo 'Amplitude forward model' > tmp.fenster

$mtlb < $plotmod >& /dev/null

tmp='cur_crmod.mag'
myeps=`basename $tmp`'.eps'
mypdf=`basename $myeps '.eps'|tr '.' '_'`'.pdf'
echo image conversion... $myeps $mypdf
$epsp $myeps -o=$mypdf >& /dev/null

pdfcr=`which pdfcrop`
forcecheck $pdfcr
$pdfcr --margins 1 --hires $mypdf cropped.pdf >& /dev/null
echo "done mag"

if [ -n "$1" ];then
rm tmp.crange tmp.cbarn
awk '{if(NR>1){printf("%f\t%f\t%g\n",0,0,$2)}else{print}}' $mod > cur_crmod.pha
echo 'cur_crmod.pha' > inv.lastmod
echo 'Phase forward model' > tmp.fenster

$mtlb < $plotmod >& /dev/null

tmp='cur_crmod.pha'
myeps=`basename $tmp`'.eps'
mypdf=`basename $myeps '.eps'|tr '.' '_'`'.pdf'
echo image conversion... $myeps $mypdf
$epsp $myeps -o=$mypdf >& /dev/null

pdfcr=`which pdfcrop`
forcecheck $pdfcr
$pdfcr --margins 1 --hires $mypdf cropped.pdf >& /dev/null
cp crt.lastmod inv.lastmod
clean
fi
echo "done all"

