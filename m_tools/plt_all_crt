#!/bin/bash

if [ -e crtomo.cfg ];then
	invdir=`awk '{if(NR==5){print $1}}' crtomo.cfg`
fi
if [ -e inv.lastmod ];then
    echo found inv.lastmod
else
    echo no inversion results found.. exiting 
    exit
fi
cp inv.lastmod crt.lastmod
mymag=`cat inv.lastmod`
mymag=`basename $mymag '.mag'`
echo $mymag
it=`echo $mymag|sed 's/rho//g'`
clean
echo 'Amplitude' > tmp.fenster
plot_cur_crtomo
pltpdf=$mymag'_mag.pdf'
clean
if [ -e $invdir/$mymag'.pha' ];then
    echo $invdir/$mymag'.pha' > inv.lastmod
    echo "Phase" > tmp.fenster
    plot_cur_crtomo
    pltpdf="$pltpdf $mymag"'_pha.pdf'
    clean
fi
echo $invdir/coverage.mag > inv.lastmod
echo 'c_j=\Sigma_i|A_{ij}|' > tmp.fenster
echo 'log_{10}(c)[SI]' > tmp.cbarn
plot_cur_crtomo
pltpdf="$pltpdf coverage_mag.pdf"
clean
if [ -e $invdir/ata.diag ];then
    echo $invdir/ata.diag > inv.lastmod
    echo "Squared coverage" > tmp.fenster
    echo 'Cov=A^TC_d^{-1}A' > tmp.fenster
    echo 'log_{10}(Cov_{jj})[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf ata_diag.pdf"
    clean
fi
if [ -e $invdir/ata_reg.diag ] ;then
    echo $invdir/ata_reg.diag > inv.lastmod
    echo "Regularized squared coverage" > tmp.fenster
    echo "RCov=A^TC_d^{-1}A + \lambda R^TR" > tmp.fenster
    echo 'log_{10}(RCov_{jj})[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf ata_reg_diag.pdf"
    clean
fi
if [ -e $invdir/cov1_m.diag_re ];then
    echo $invdir/cov1_m.diag_re > inv.lastmod
    echo "Model Covariance Matrix" > tmp.fenster
    echo 'MCM1=(A^TC_d^{-1}A + \lambda R^TR)^{-1}' > tmp.fenster
    echo 'log_{10}(MCM1_{jj}^{1/2})[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf cov1_m_diag_re.pdf"
    clean
fi
if [ -e $invdir/cov1_m.diag_im ];then
    echo $invdir/cov1_m.diag_im > inv.lastmod
    echo "Model Covariance Matrix" > tmp.fenster
    echo 'MCM1=(A^TC_d^{-1}A + \lambda R^TR)^{-1}' > tmp.fenster
    echo 'Im(log_{10}(MCM1_{jj}^{1/2}))[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf cov1_m_diag_im.pdf"
    clean
fi
if [ -e $invdir/res_m.diag_re ];then
    awk '{if(NR>1){print $2,$1}else{print}}' $invdir/res_m.diag_re > tmp.dat
    cp tmp.dat $invdir/res_m.diagre
    echo $invdir/res_m.diagre > inv.lastmod
    echo "Resolution Matrix" > tmp.fenster
    echo 'RES=(A^TC_d^{-1}A + \lambda R^TR)^{-1}A^TC_d^{-1}A' > tmp.fenster
    echo 'RES_{jj}[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf res_m_diagre.pdf"
    clean
fi
if [ -e $invdir/res_m.diag_im ];then
    awk '{if(NR>1){print $2,$1}else{print}}' $invdir/res_m.diag_im > tmp.dat
    cp tmp.dat $invdir/res_m.diagim
    echo $invdir/res_m.diagim > inv.lastmod
    echo "Resolution Matrix" > tmp.fenster
    echo 'RES=(A^TC_d^{-1}A + \lambda R^TR)^{-1}A^TC_d^{-1}A' > tmp.fenster
    echo 'Im(RES_{jj})[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf res_m_diagim.pdf"
    clean
fi
if [ -e $invdir/cov2_m.diag_re ];then
    echo $invdir/cov2_m.diag_re > inv.lastmod
    echo "Model Covariance Matrix" > tmp.fenster
    echo 'MCM2=MCM1 A^TC_d^{-1}A MCM1' > tmp.fenster
    echo 'log_{10}(MCM2_{jj}^{1/2})[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf cov2_m_diag_re.pdf"
    clean
fi
if [ -e $invdir/cov2_m.diag_im ];then
    echo $invdir/cov2_m.diag_im > inv.lastmod
    echo "Model Covariance Matrix" > tmp.fenster
    echo 'MCM2=MCM1 A^TC_d^{-1}A MCM1' > tmp.fenster
    echo 'Im(log_{10}(MCM2_{jj}^{1/2}))[SI]' > tmp.cbarn
    plot_cur_crtomo
    pltpdf="$pltpdf cov2_m_diag_im.pdf"
    clean
fi
cp crt.lastmod inv.lastmod
#if [ -n "$1" ];then
#	texfile=lam_$1.tex
#else
	texfile=crt_plots.tex
#fi
echo '\documentclass[12pt,a4]{article}' > $texfile 
echo '\usepackage{amsmath,amssymb,mathrsfs}' >> $texfile
echo '\usepackage[T1]{fontenc}' >> $texfile
echo '\usepackage[utf8]{inputenc}' >> $texfile
echo '\usepackage{pstricks,epsf,graphicx,psfrag,epsfig}' >> $texfile
echo '\usepackage{epstopdf,boxedminipage,fancybox,subfigure,float}' >> $texfile
echo '\usepackage{fancyhdr}' >> $texfile
echo '\oddsidemargin0mm' >> $texfile
echo '\parindent0mm' >> $texfile
echo '\parskip0mm' >> $texfile
echo '\textheight24cm' >> $texfile
echo '\textwidth17cm' >> $texfile
echo '\unitlength1mm' >> $texfile
echo '\topmargin-2cm' >> $texfile
echo '\headheight0cm' >> $texfile
echo '\footskip3cm' >> $texfile
#echo '\setlength{\parindent}{0pt}' >> $texfile
#echo '\setlength{\topmargin}{0cm}' >> $texfile
#echo '\setlength{\headsep}{-.5cm}' >> $texfile
#echo '\setlength{\headheight}{0cm}' >> $texfile
#echo '\textheight=25cm' >> $texfile
#echo '\setlength{\oddsidemargin}{.5cm}' >> $texfile
#echo '\setlength{\evensidemargin}{.5cm}' >> $texfile
#echo '\textwidth=17cm' >> $texfile
echo '\begin{document}' >> $texfile
echo '\pagestyle{fancy}' >> $texfile
#if [ -n "$1" ];then
#	echo '\fancyhead[C]{\Large\bf $\lambda='$1'$}' >> $texfile
#else
	echo '\fancyhead[C]{\Large\bf CRTomo Iteration no. '$it'}' >> $texfile
#fi
#echo '\begin{figure}' >> $texfile
rm -f cropped.pdf
echo $pltpdf
let i=1
for x in $pltpdf;do
  my_pdfcrop ./ $x
  y=`basename $x '.pdf'`;
#  echo '\\begin{minipage}{7.5cm}' >> $texfile
#  echo '\subfigure[][]{' >> $texfile
#  echo '\includegraphics[width=.5\textwidth,height=.33\textheight]{'$x'}' >> $texfile
  echo '\includegraphics[width=.5\textwidth]{'$x'}' >> $texfile
#  echo '' >> $texfile
#  echo '\caption[]{'$x'}' >> $texfile
#  echo '\\end{minipage}' >> $texfile
# echo '\hspace{-1mm}' >> $texfile
#  echo '\\vskip5mm' >> $texfile
#  let k=$i%8
#  if [ $k -eq 0 ]; then
#    echo '\clearpage' >> $texfile
#  fi
  let i=$i+1
done
#echo '\end{figure}' >> $texfile
#echo '\clearpage' >> $texfile
echo '\end{document}' >> $texfile

pdflatex $texfile

