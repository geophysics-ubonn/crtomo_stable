#########################################################################################
###			NEW cfg file format::					      ###
#########################################################################################
### Comment lines start with (at least one) # at the first row of a line !
### they are omitted during the read in of cfg file
#########################################################################################
#########################################################################################
## NOTE: 
## NO FURTHER EMPTY LINES, EXCEPT THE ONES ALREAD PRESENT SHOULD BE GIVEN!!!
#########################################################################################
#########################################################################################
# the first line normally contains *** but may hold a integer number (the mega switch)
# which is evaluated bit wise and may control some things due to their Bit bwise setting.
# Currently implelemted are:
#  lsens = BTEST(mswitch,0)  ! +1 write out coverage.dat (L1-norm of the sensitivities)
#		(default)
#  lcov1 = BTEST(mswitch,1)  ! +2 write out main diagonal of 
#	posterior model covariance matrix: MCM_1=( A^T C_d^-1 A + lamda C_m^-1 )^-1
#  lres  = BTEST(mswitch,2)  ! +4 write out main diagonal of 
#	resolution matrix: RES = MCM_1 * A^T C_d^-1 A 
#  lcov2 = BTEST(mswitch,3)  ! +8 write out main diagonal of 
#	posterior model covariance matrix 2: MCM_2 = RES * MCM_1
#  lgauss = BTEST (mswitch,4) ! +16 solve all OLS using Gauss elemination
#  lelerr = BTEST (mswitch,5).OR.lelerr ! +32 uses error ellipses in the inversion,
#	regardless of any previous lelerr state..
#  mswitch with 2^6 is empty for now...
#  lphi0 = BTEST (mswitch,7) ! +128 force negative phase
#  lsytop = BTEST (mswitch,8) ! +256 enables sy top check of 
#	no flow boundary electrodes for enhanced beta calculation (bsytop). 
#	This is useful for including topographical effects
#  lvario = BTEST (mswitch,9) ! +512 calculate variogram
#          Variogram is plotted with gnuplot!
#  lverb = BTEST (mswitch,10) ! +1024 Verbose output of CG iterations, 
#	data read in, bnachbar calculations...
#########################################################################################
8
#########################################################################################
# Path to the grid file, may contain blanks
#########################################################################################
../grid/elem.dat 
#########################################################################################
# Path to the file containing electrode positions, may contain blanks
#########################################################################################
../grid/elec.dat 
#########################################################################################
# Path to the measurement readings (Volts!), may contain blanks
#########################################################################################
../mod/volt.dat
#########################################################################################
# Directory name to store the inversion results.., may contain blanks
#########################################################################################
../inv 
#########################################################################################
# Logical switch for difference inversion (ldiff) and, if a prior model (m0) is used, 
#	this switch also controls whether or not to regularize against the prior..
#	(internal variable lprior=T)
# 	leading to (m-m0)R^TR(m-m0) constraint, if no difference data are given
#########################################################################################
F
#########################################################################################
# Path to the measurement file for difference inversion, may contain blanks.
# If left empty, no data is assumed     
#########################################################################################
../diff/dvolt.dat
#########################################################################################
# Path to the prior model (m0), which is also the model of the difference 
# 	inversion which is obtained by a previous CRTomo run (dm0).
# If ldiff is false, and a valid path to a prior is given,       
# 	the prior is copied into the starting model!!            
#########################################################################################
../rho/prior.modl
#########################################################################################
# Path to the model response of m0 in case of difference inversion (ldiff=T)
#	this should be empty if you have none
#########################################################################################
../diff/dvolt2.dat
#########################################################################################
# The next line usually contains nothing but *** ....
# YET, if you have a prior (or starting) model and like to add noise to it. 
#	You can then give a seed (integer) and a variance (float) for this.    
# These numbers are useless if no prior is given..
#########################################################################################
iseed variance
#########################################################################################
# For regular grids and the old regularization you have to define the Nx (number of 
#	elements in x-direction)
# THIS IS NOW OBSOLETE (but can be used, though..) because the triangulation 
#	regularization is proofed equivalent to the old regularization for regular grids!
#
# To give it a new purpose, you can now control variogram models with it!
# The integer is read in as decimal leaving two digits (XY) with a control function
#
# _X_ Controls the covariance function and _Y_ the variogram model 
#
# The variogram model has 4 modes:
#    CASE (X=1) !Gaussian variogram = (1-EXP(-(3h/a)^2))
#	(Ix_v = Ix_v/3 ; Iy_v = Iy_v/3: scale length are changed to match GSlib standard)
#    CASE (X=2) ! Spherical variogram = ((1.5(h/a)-.5(h/a)^3),1)
#    CASE (X=3) ! Power model variogram = (h/a)^omev
# in this case you can change the power model exponent, which is set to 2 as default
#    CASE DEFAULT! exponential variogram = (1-EXP(-(3h/a)))
#	(Ix_v = Ix_v/3 ; Iy_v = Iy_v/3)
# The default case is used if left at zero or otherwise
#
# For the covariance function there aare also 4 modes implemented:
#    CASE (Y=1) !Gaussian covariance = EXP(-(3h/a)^2)
#	(Ix_c = Ix_c/3 ; Iy_c = Iy_c/3: scale length are changed to match GSlib standard)
#    CASE (Y=2) !Spherical covariance = ((1-1.5(h/a)+.5(h/a)^3),0)
#    CASE (Y=3) !Power model covariance = EXP(-va*(h/a)^omec)
#    CASE (Y=4) !Lemma (still to proof!) covariance = EXP(-tfac*variogram(h))
#    CASE DEFAULT!Exponential covariance = EXP(-3h/a)
#	(Ix_c = Ix_c/3 ; Iy_c = Iy_c/3)
#
# The covariance model does only makes sense with a stochstaical regularization!!!
# 
# EXAMPLE: 
#	- You like to have spherical variogram but gaussian covariance set the number
#	to 12
#	- If you like to have a spherical variogram and a exponential covariance
# NOTE:
#	The experimental variogram can be calculated (and this is default if any value
#	is given) no matter which model function you state here..
#########################################################################################
0
#########################################################################################
# Previously, the next integer number was the number of cells in z- (or y)-direction
# However, the same argumentation for this number holds as for Nx.
# The new meaning for Nz is now to give a starting value for lambda:
# 	-value given here sets lam_0 = value
# This may be further exploited (in case you do not know and do not like the whole A^TA
#  	diagonal maximum to be calculated (blam0), you can leave it as -1 which will take
# 	lam_0 = MAX(number of data points,number of model parameters)
#########################################################################################
-1
#########################################################################################
# Now, the anisotropic regularization parameters (float) can be specified:
# alpha_x
#########################################################################################
 1.0000
#########################################################################################
# alpha_z (y)
#########################################################################################
 1.0000
#########################################################################################
# Next, you have to give a upper boundary for the number of iterations (int)
# NOTE:
# If it is set to zero, no inverse modelling is done, but coverages 
#	(resolution, variogram, etc..) may be calculated.
# This is especially useful in conjunction with a valid prior/starting model!
#########################################################################################
20
#########################################################################################
# The next (logical) switch (ldc) controls whether we invert for COMPLEX (EIT, ldc = F) 
#	or REAL values (ERT) (ldc = T)
#########################################################################################
F
#########################################################################################
# (logical) switch (lrobust) for robust inversion (e.g. La Breque et al 199x ?) 
#########################################################################################
F
#########################################################################################
# Do you want a Final phase improvement (FPI) ? set (lfphai) the next logical to T
# NOTE:
#	If (ldc == .FALSE. .and. lfphai == .TRUE.) lelerr = .FALSE. (error ellipses)
# This has the impact, that no error ellipses are used in FPI.
##
# However, this may be overwritten by setting mswitch = mswitch + 32 in the first line !!
#########################################################################################
T
#########################################################################################
# The next two floats determine the error model for resistance/voltage
# which is currently implemented as  \delta R = A * abs(R) + B
# Thus, A gives the relative error estimate [%] and B gives the absolute error estimate.
#
# NOTE:
# The first (A) Parameter also controls whether or not to couple the (maybe COMPLEX) 
#	error model to any noise additions (Yes, voltages in CRTomo can be noised...)
# If A is set to -A , the whole error model is taken as noise model.
# Giving this, you may want to add a ensemble seed number, which may be crucial for
#	any kind of monte carlo study, at the end of this crt-file..
# The noise is also written to the file 'crt.noisemod' which may be changed afterwards if
# 	you like to decouple error and noise model. 
# NOTENOTE:
# CRTomo is looking for crt.noisemod in the current directory as default.
# If it is existing or a valid file, it gives a note about this and 
#	trys to get a noise model from the data contained
#########################################################################################
-1.0
#########################################################################################
# Error model parameter B [Ohm] 
#########################################################################################
0.0
#########################################################################################
# Next 4 (float) numbers control the phase error model as can be found in
# Flores-Orozsco et al, 2011
# \delta \phi = A1*abs(R)^B1 + A2*abs(pha) + p0
###
# A1 [mrad/Ohm/m]
#########################################################################################
0.0
#########################################################################################
# B1 []
#########################################################################################
0.0
#########################################################################################
# A2 [%]
#########################################################################################
0.0
#########################################################################################
# p0 [mrad]
#########################################################################################
#########################################################################################
# If you use FPI, note that if P0 is set to a negative value, the phase model is set 
# to a homogenous model if FPI starts, this was used by AK as default...
# the p0 is set to its positive value for error calc, if this is used (of course..)
#########################################################################################
#########################################################################################
1e-1
#########################################################################################
# Here you can decide if you want a homogenous starting model (overwritten with prior)
# logical (lrho0) for both, magnitude and phase
#########################################################################################
T
#########################################################################################
# homogenous background resistivity value for magnitude [Ohm m]
#########################################################################################
100.00
#########################################################################################
# homogenous background value for the phase [mrad]
#########################################################################################
0.000
#########################################################################################
# Some people prefer having one crt-file for many inversions.
# If you set this logical T, CRTomo tries to read in another crt-style file after
# 	the first inversion was done.
# This also means, that any data arrays (memory model!!) are reallocated and thus
#	different grids/electrodes/measurements can be given to CRTomo...
#########################################################################################
F
#########################################################################################
# Dimensionality switch (integer) to control whether or not to have a _real_ 2D (=0) 
#	or a 2.5D (=1) forward solution. 2.5D assumes a 3D model space with a resistivity
#	distribution that is homogeneous in the y direction.
# NOTE:
# If you like to have a true 2D (i.e. setting to 0) you have to keep in mind that
#	the sink node setting (down below) has to be set.
# Also note that if 2D mode is selected the singularity removal switch may be helpful to 
# reduce numerical issues.
#########################################################################################
1
#########################################################################################
# (logical) switch whether to introduce a fictitious sink node (sink is here in the sense
#	of a -I electrode at some place in b by solving Ax=b with Cholesky
#########################################################################################
F
#########################################################################################
# Node number (int) of the sink node
# The chosen node should conform to the following properties:
# - not a boundary node
# - not an electrode
# - should be positioned at the center of the grid with a preferably large distance to 
#   all electrodes
#########################################################################################
0
#########################################################################################
# Do you like to read in some boundary potential values ? (logical)
# The boundary values are helpful for tank experiments at known voltages (i.e. 
#	inhomogenous Dirichlet boundaries)
#########################################################################################
F
#########################################################################################
# Path to the boundary values, blanks can be included
#########################################################################################
empty
#########################################################################################
# In some older cfg files, this would be the end of the cfg-file.
# Yet, to control regularization you can give in the next line a integer (ltri) to 
#	manage it:
#  (=0)	- Smooth regularization for regular grids only (Nx and Nz have to be correct!!)
#  (=1)	- Smooth triangular regularization (should be used as default and the method
#	of choice
#  (=2)	- Smooth triangular regularization, second order (not yet implemented..)
#  (=3)	- Levenberg damping (i.e. C_m^-1 = lambda * I)
#  (=4)	- Marquardt-Levenberg damping (i.e. C_m^-1 = lambda * diag{A^T C_d^-1 A} )
#  (=5)	- MGS regularization (pure MGS after Zhdanov & Portniaguine): 
#	C_m^-1 \approx \int \frac{(\nabla m_{ij})^2}{(\nabla m_{ij})^2+\beta^2}\;dA
#  (=6)	- MGS with sensitivity weighted beta: = beta / f_{ij} (from Blaschek 2008)
#	where f_{ij} = (1 + g(i) + g(k))^2 and g(i,k) = log_{10} coverage (m_{i,k})
#  (=7)	- MGS with sensitivity weighted beta (as with 6) but normalized:
#	f_{ij} = ((1 + g(i) + g(k))/mean{coverage})^2
#  (=8)	- MGS as in 6, but here a modified version of Roland Blaschek (which I apparently
#	didn't understood, but was given to me from Fred...).
# For more details please have a look into bsmatm_mod.f90 -> SUBROUTINE bsmamtmmgs
#  (=9)	- Same as 8, but with mean coverage normalization
# (=10) - Total variance (TV) regularization (not well tested, but I think it is BETA)
#
# NOTE:
# For MGS and TV you can specify a beta-value (0<beta<1) in this cfg!
#
# (=15) - Stochastic regualrization (lsto=.T.). Here, C_m is a full matrix which needs to be  
#	inverted at the beginning of the inverse process. For this regu you have to 
#	specify a proper integral scale and covariance function (see Nx-switch).
#       - if lsto is set, we automatically calculate a experimental Variogram!
# (>15)	- not allowed
# (+32)	- Fix lambda value to a given value (1 as default)
#	The switch is binary tested so it is as cumulative as mswitch. 
#	Also it is removed after a internal logical was set true (llamf).
#	The lambda value can be given in a additional line after the ltri value.
#
# NOTE:
# The order of the additional switches (fixed lambda, beta, seed) is treated like: 
#	- fixed lambda 
#	- MGS/TV beta 
#	- Random seed
# Each in a seperate line!
#########################################################################################
1
#########################################################################################
# The following line depends on the previous choice you made, so it may be the Random
# 	seed, the fixed lambda value or the MGS/TV beta.
# In case of an error (fixed format integer read!) this line is just omitted.
# 
# NOTE:
# For people with cfg-files with more than one inversion run (another data set = T), the 
# 	next line should contain the beginning of the next cfg.
#########################################################################################
lam/beta/seed
